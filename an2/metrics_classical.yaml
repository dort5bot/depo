# schemas/metrics_classical.yaml
meta:
  version: "2025.1"
  maintainer: "ysf-bot-framework"
  last_updated: "2025-10-28"
  description: "Meta registry of classical technical and risk metrics used in MAPS analysis modules."

metrics:

  EMA:
    category: "trend"
    description: "Exponential Moving Average of price series."
    formula: "EMA_t = α * Price_t + (1 - α) * EMA_(t-1)"
    parameters:
      - name: period
        type: int
        default: 14
    input: "price"
    output: "float_series"

  SMA:
    category: "trend"
    description: "Simple Moving Average of price series."
    formula: "SMA = sum(Price[-n:]) / n"
    parameters:
      - name: period
        type: int
        default: 14
    input: "price"
    output: "float_series"

  MACD:
    category: "trend_momentum"
    description: "Moving Average Convergence Divergence."
    formula: "MACD = EMA(fast) - EMA(slow); Signal = EMA(MACD, signal)"
    parameters:
      - name: fast
        type: int
        default: 12
      - name: slow
        type: int
        default: 26
      - name: signal
        type: int
        default: 9
    input: "price"
    output: "dataframe"

  RSI:
    category: "momentum"
    description: "Relative Strength Index to measure overbought/oversold conditions."
    formula: "RSI = 100 - (100 / (1 + RS))"
    parameters:
      - name: period
        type: int
        default: 14
    input: "price"
    output: "float_series"

  ADX:
    category: "trend_strength"
    description: "Average Directional Index for trend strength."
    formula: "ADX = smoothed(|+DI - -DI| / (+DI + -DI)) * 100"
    parameters:
      - name: period
        type: int
        default: 14
    input: ["high", "low", "close"]
    output: "float_series"

  ATR:
    category: "volatility"
    description: "Average True Range for price volatility."
    formula: "ATR = MA(max(H-L, |H-Cprev|, |L-Cprev|))"
    parameters:
      - name: period
        type: int
        default: 14
    input: ["high", "low", "close"]
    output: "float_series"

  Bollinger_Bands:
    category: "volatility_band"
    description: "Upper and lower bands around SMA based on standard deviation."
    formula: "Upper = SMA + k*STD; Lower = SMA - k*STD"
    parameters:
      - name: period
        type: int
        default: 20
      - name: std_factor
        type: float
        default: 2.0
    input: "price"
    output: "dataframe"

  Historical_Volatility:
    category: "volatility"
    description: "Annualized historical volatility from log returns."
    formula: "σ = std(log(P_t / P_(t-1))) * sqrt(252)"
    parameters:
      - name: period
        type: int
        default: 30
    input: "price"
    output: "float_series"

  Variance_Ratio_Test:
    category: "statistical_test"
    description: "Tests for mean reversion or random walk behavior."
    formula: "VR = var(r_t aggregated) / (lag * var(r_t))"
    parameters:
      - name: lag
        type: int
        default: 2
    input: "price"
    output: "float_series"

  Range_Expansion_Index:
    category: "volatility_expansion"
    description: "Measures expansion of trading ranges relative to mean."
    formula: "REI = (AvgRange - Mean) / Std(AvgRange)"
    parameters:
      - name: period
        type: int
        default: 14
    input: ["high", "low", "close"]
    output: "float_series"

  Max_Drawdown:
    category: "risk"
    description: "Maximum observed drawdown from a peak to trough."
    formula: "MDD = min((P_t - max(P)) / max(P))"
    input: "equity"
    output: "float_value"

  Pearson_Correlation:
    category: "correlation"
    description: "Standard Pearson correlation coefficient."
    formula: "r = cov(X, Y) / (σ_X * σ_Y)"
    input: ["series_x", "series_y"]
    output: "float_value"

  Rolling_Covariance:
    category: "correlation"
    description: "Rolling covariance between two time series."
    formula: "Cov_t = cov(X_t, Y_t)"
    parameters:
      - name: window
        type: int
        default: 30
    input: ["series_x", "series_y"]
    output: "float_series"

  Beta_Coefficient:
    category: "regression"
    description: "Rolling beta coefficient relative to a benchmark."
    formula: "β = Cov(asset, benchmark) / Var(benchmark)"
    parameters:
      - name: window
        type: int
        default: 30
    input: ["asset", "benchmark"]
    output: "float_series"

  VaR:
    category: "risk"
    description: "Value at Risk at a given confidence level."
    formula: "VaR = percentile(loss, 1 - α)"
    parameters:
      - name: confidence
        type: float
        default: 0.95
    input: "returns"
    output: "float_value"

  CVaR:
    category: "risk"
    description: "Conditional Value at Risk (Expected Shortfall)."
    formula: "CVaR = E[loss | loss <= VaR]"
    parameters:
      - name: confidence
        type: float
        default: 0.95
    input: "returns"
    output: "float_value"

  Volatility_Targeting:
    category: "risk_management"
    description: "Computes leverage ratio to target a given volatility."
    formula: "leverage = target_vol / realized_vol"
    parameters:
      - name: target_vol
        type: float
        default: 0.2
      - name: window
        type: int
        default: 30
    input: "returns"
    output: "float_series"
